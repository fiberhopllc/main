
define(function(require,exports,module){var OptionsManager=require('../core/OptionsManager');var Transform=require('../core/Transform');var ViewSequence=require('../core/ViewSequence');var Utility=require('../utilities/Utility');function SequentialLayout(options){this._items=null;this._size=null;this._outputFunction=SequentialLayout.DEFAULT_OUTPUT_FUNCTION;this.options=Utility.clone(this.constructor.DEFAULT_OPTIONS||SequentialLayout.DEFAULT_OPTIONS);this.optionsManager=new OptionsManager(this.options);if(options)this.setOptions(options);}
SequentialLayout.DEFAULT_OPTIONS={direction:Utility.Direction.Y,itemSpacing:0};SequentialLayout.DEFAULT_OUTPUT_FUNCTION=function DEFAULT_OUTPUT_FUNCTION(input,offset,index){var transform=(this.options.direction===Utility.Direction.X)?Transform.translate(offset,0):Transform.translate(0,offset);return{transform:transform,target:input.render()};};SequentialLayout.prototype.getSize=function getSize(){if(!this._size)this.render();return this._size;};SequentialLayout.prototype.sequenceFrom=function sequenceFrom(items){if(items instanceof Array)items=new ViewSequence(items);this._items=items;return this;};SequentialLayout.prototype.setOptions=function setOptions(options){this.optionsManager.setOptions.apply(this.optionsManager,arguments);return this;};SequentialLayout.prototype.setOutputFunction=function setOutputFunction(outputFunction){this._outputFunction=outputFunction;return this;};SequentialLayout.prototype.render=function render(){var length=0;var secondaryDirection=this.options.direction^1;var currentNode=this._items;var item=null;var itemSize=[];var output={};var result=[];var i=0;this._size=[0,0];while(currentNode){item=currentNode.get();if(!item)break;if(item.getSize)itemSize=item.getSize();output=this._outputFunction.call(this,item,length,i++);result.push(output);if(itemSize){if(itemSize[this.options.direction])length+=itemSize[this.options.direction];if(itemSize[secondaryDirection]>this._size[secondaryDirection])this._size[secondaryDirection]=itemSize[secondaryDirection];if(itemSize[secondaryDirection]===0)this._size[secondaryDirection]=undefined;}
currentNode=currentNode.getNext();if(this.options.itemSpacing&&currentNode)length+=this.options.itemSpacing;}
this._size[this.options.direction]=length;return{size:this.getSize(),target:result};};module.exports=SequentialLayout;});